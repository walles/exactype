/*
 * Copyright 2015 Johan Walles <johan.walles@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

// From: http://stackoverflow.com/questions/17097263/automatically-versioning-android-project-from-git-describe-with-android-studio-g
def getVersionCode = { ->
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'tag', '--list', 'version-*'
            standardOutput = code
        }
        return code.toString().split("\n").size()
    }
    catch (ignored) {
        return -1
    }
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'sh', '-c',
                    'git describe --tags --dirty --first-parent --match="version-*"|sed \'s/^version-//\''
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null
    }
}

android {
    // NOTICE: These must match the values in .travis.yml
    // NOTICE: Do any changes to these on a branch; the Travis builds tend to start failing when
    // these values are changed!
    compileSdkVersion 30
    // ^^^ READ THE ABOVE NOTICE!! ^^^
    buildToolsVersion '29.0.3'
    // ^^^ READ THE ABOVE NOTICE!! ^^^
    defaultConfig {
        applicationId "com.gmail.walles.johan.exactype"

        // At the time of changing this to 22, 22 represented a bit above 90% of all users,
        // something to keep in mind for potential future bumps.
        minSdkVersion 22
        targetSdkVersion 30
        versionCode getVersionCode()
        versionName getVersionName()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        // This test can be fine one day and not fine the next without us changing anything. Not
        // reliable enough, disable.
        //
        // Docs at http://tools.android.com/tips/lint-checks
        disable("GradleDependency")

        // Johan doesn't want to generate multiple icon sizes; most phones can resize an icon just
        // fine by itself.
        disable("IconMissingDensityFolder")

        // This warning wants ExactypeView to implement / call View.performClick() to play a sound
        // (but we want to do that ourselves if at all), report accessibility events (that the
        // keyboard was clicked, but not which key, which won't help anyone), and call any
        // registered OnClickListener (don't care, we can do that manually if deemed important in
        // the future). Feel free to question this reasoning, but until then I'll keep this
        // disabled.
        disable("ClickableViewAccessibility")

        // This one just fails randomly whenever Google releases an update, begone flaky test
        disable("OldTargetApi")

        abortOnError true
        warningsAsErrors true

        textOutput "stdout"
        textReport true

        htmlReport true
        htmlOutput file("$project.buildDir/reports/lint.html")
    }
    // Read signing properties from ~/.gradle/exactype.properties
    //
    // From: https://www.timroes.de/2013/09/22/handling-signing-configs-with-gradle/
    if (new File("${gradle.gradleUserHomeDir}/exactype.properties").exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(file("${gradle.gradleUserHomeDir}/exactype.properties")))

        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keyAlias']
                keyPassword props['keyPassword']
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation 'org.powermock:powermock-core:2.0.7'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.7'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.7'
}
